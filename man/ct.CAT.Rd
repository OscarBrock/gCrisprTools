% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateCAT.R
\name{ct.CAT}
\alias{ct.CAT}
\title{Compare Two CRISPR Screens via a CAT plot}
\usage{
ct.CAT(
  df1,
  df2,
  targets = c("geneSymbol", "geneID"),
  enrich,
  plot.it = TRUE,
  plot.rho = TRUE
)
}
\arguments{
\item{df1}{A dataframe summarizing the results of the screen, returned by the function \code{\link{ct.generateResults}}.}

\item{df2}{A dataframe summarizing the results of the screen, returned by the function \code{\link{ct.generateResults}}.}

\item{targets}{Column of the provided \code{summaryDF} to consider. Must be \code{geneID} or \code{geneSymbol}.}

\item{enrich}{Logical indicating whether to test for enrichment or depletion.}

\item{plot.it}{Logical indicating whether to compose the plot on the default device.}

\item{plot.rho}{Logical indicating whether to plot the Rho values in addition to the P-values, which sometimes 
have better ranking properties.}
}
\value{
Invisibly, a data.frame containing the relevant summary stats for each target in both screens.
}
\description{
This is a function for comparing the results of two screening experiments. Given two \code{summaryDF}, 
the function places them in register with one another, generates a Concordance At The Top (CAT) plot, and returns an 
invisible dataframe containing the relevant gene-level signals.

This function is conceptually similar to the `ct.ROC` and `ct.PRC()` functions, but is appropriate when considering 
consistency of ranked values rather than an interchangeable set; the most common use case is for comparing primary 
and replication screens, where the underlying technology and selection criteria are expected to be highly similar. 
CAT plots are fundamentally about comparing rankings, and so only targets in common between the two provided 
screens are considered. If the totality of list overlap is important, consider using `ct.PRC()` or `ct.ROC()`.

Note that ranking statistics in CRISPR screens are (usually) permutation-based, and so some granularity in the 
rankings is expected. This function does a little extra work to limit the influence of this granularity and to 
ensure that hits are counted as soon as the requisite value of the ranking statistic is reached regardless of 
where the target is located within the block of equally-significant hits. Functionally, this means that the 
drawn curve is somewhat anticonservative in cases where the target ranks are not well differentiated.
}
\examples{
data('resultsDF')
cat <- ct.CAT(resultsDF, resultsDF[1:2000,], enrich = TRUE)
head(cat)
}
\author{
Russell Bainer
}
